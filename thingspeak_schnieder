#include <ModbusRTU.h>
#include <ESP8266WiFi.h>
#include "ThingSpeak.h"
ModbusRTU mb;

#include <SoftwareSerial.h>
int DE_RE = 4; //D4  For MAX485 chip
int RX = 12;
int TX = 13;
unsigned long lastTime = 0;
unsigned long timerDelay = 30000;

const char* ssid = "pushkar";   // your network SSID (name) 
const char* password = "123456789";   // your network password
unsigned long myChannelNumber = 3;
const char * myWriteAPIKey = "S8ZUZ0H9038HJEC5";

WiFiClient  client;

SoftwareSerial S(RX, TX);//D6/D7  (RX , TX)

uint16_t Mread0[2];

bool cbWrite(Modbus::ResultCode event, uint16_t transactionId, void* data) {
  Serial.printf_P("Request result: 0x%02X, Mem: %d\n", event, ESP.getFreeHeap());
  return true;
}
float InttoFloat(uint16_t Data0,uint16_t Data1) {
  float x;
  unsigned long *p;
  p = (unsigned long*)&x;
  *p = (unsigned long)Data0 << 16 | Data1; //Big-endian
  return(x);
}

void setup() {
  Serial.begin(19200);
  S.begin(19200, SWSERIAL_8E1);
  WiFi.mode(WIFI_STA);   
  
  ThingSpeak.begin(client);
  mb.begin(&S, DE_RE); //Assing Software serial port to Modbus instance for MAX485 chip having DI,DE,RE,RO Pin at TTL side
  mb.master(); //Assing Modbus function as master
  Serial.println(); //Print empty line
  Serial.println(sizeof(Mread0)); //Reaing size of first array
}
void loop() {
  if ((millis() - lastTime) > timerDelay) {
    
    // Connect or reconnect to WiFi
    if(WiFi.status() != WL_CONNECTED){
      Serial.print("Attempting to connect");
      while(WiFi.status() != WL_CONNECTED){
        WiFi.begin(ssid, password); 
        delay(5000);     
      } 
      Serial.println("\nConnected.");
    }
  if (!mb.slave()) {
    mb.readHreg(1, 3027, Mread0, 2 , cbWrite);  //(SlaevID,Address,Buffer,Range of data,Modus call)
    Serial.println(InttoFloat(Mread0[0], Mread0[1]));
     int x = ThingSpeak.writeField(myChannelNumber, 1,InttoFloat(Mread0[0], Mread0[1]) , myWriteAPIKey);
  }
  mb.task();
  delay(1000);
  yield();
}}
